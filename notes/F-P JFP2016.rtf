{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red67\green67\blue67;\red0\green0\blue255;\red153\green0\blue255;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\}.}{\leveltext\leveltemplateid2\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid302\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid402\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid403\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\}.}{\leveltext\leveltemplateid502\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid902\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1002\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1003\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}}
\vieww12840\viewh14500\viewkind1
\deftab720
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl0
\f0\fs22 \cf0 1.	\strike \strikec0 Part 3\strike0\striked0 \
\ls1\ilvl0\strike \strikec0 2.	Paper \'fcberf\'fchren\
3.	Verbalization of formalization\
\ls1\ilvl0\strike0\striked0 4.	Mention theoretical results in intro!!\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl1\cf0 a.	Proof read intro re differentiation of our approach \
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl0\cf0 5.	Check capitalization of headers (what does the guide say?)\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl1\cf0 a.	Fix final title of paper\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl0\cf0 6.	Use \\longrightarrow for determ. reduction\
7.	improve desc of well-formed configs\
8.	improve desc of subject reduction theorem?\
9.	Related work\
10.	Remove all `\\fixme`, `\\color\{gray\}`, and `\\todo`\
11.	Replay\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl1\cf0 a.	We make a couple of strong statements re fault tolerance and a formal model for this to be presented in this paper. We must double check if we really hold this statement. \
\pard\pardeftab720\ri0\sl276\slmult1\sb320\sa80\partightenfactor0
\ls1\ilvl0
\fs28 \cf2 Verbalization of formalization\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls2\ilvl0
\fs22 \cf0 \strike \strikec0 \uc0\u9679 	summarize syntax of terms\
\uc0\u9679 	summarize syntax of types\
\uc0\u9679 	explain sequential reduction\
\uc0\u9679 	explain determ. reduction\
\uc0\u9679 	explain non-determ.\
\uc0\u9679 	type assignment\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 \strike0\striked0 \
http://tex.stackexchange.com/questions/224258/how-to-make-proof-environment-without-amsthm\
\
To add to related work:\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls3\ilvl0\cf0 \uc0\u9679 	ABS-YARN\
\uc0\u9679 	Vats: A Safe, Reactive Storage Abstraction\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls3\ilvl0\cf0 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\sb360\sa120\partightenfactor0
\ls3\ilvl0
\fs32 \cf0 Introduction\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls3\ilvl0
\fs22 \cf0 Story\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl0\cf0 \uc0\u9679 	data-centric growing in importance (para 1)\
\uc0\u9679 	functional principles very good (para 2)\
\uc0\u9679 	new generation of frameworks leverages emerging functional langs (para 3)\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl0\cf0 \strike \strikec0 \uc0\u9679 	pain points: usage, internal untyped, no types -> less optimal\
\uc0\u9679 	All these systems embrace the principle of sending computations to data.\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl0\cf0 \strike0\striked0 \uc0\u9679 	What's the problem?\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl1\cf0 \uc0\u9675 	(a) programming models don't catch certain errors, e.g., .., and 
\i\b thus distribution trickles to end users who are increasingly non-expert users!
\i0\b0  (us: unique combination of previous techniques, picklers, spores to overcome)\
\uc0\u9675 	(b) foundations unclear. Not only prog. model, but 
\i\b in particular, aspects critical for distributed operation on a large scale
\i0\b0  such as fault tolerance have not been formalized previously (much less proven correct).\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl0\cf3 \uc0\u9679 	While immensely successful in practice and widely adopted, these programming systems have not been formalized, much less their internal computation models. Thus, their foundations remain largely unclear, in particular, foundations of core aspects such as fault tolerance have been missing so far.\
\uc0\u9679 	[Related work] for MR, exists Haskell model~\\cite\{L\'e4mmel, 2008, "Google's MapReduce programming model\'97Revisited"\}, but does not discuss fault tolerance.\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl0\cf0 \ul \ulc0 What the paper does:\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf3 \ulnone \uc0\u9679 	attempts to get to the essence of computation models that keep data stationary and send functions to data\
\uc0\u9679 	for this, we introduce a new programming model based on..  generalizes MR/Spark..\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf0 \uc0\u9679 	
\b lineages describing transformation on imm. is foundation of most widely used systems (MR, Spark, etc.) fault tolerance based on replay of lineages.\
\ls5\ilvl0
\b0 \uc0\u9679 	our programming model adopts exactly this style of providing fault tolerance.\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf3 \uc0\u9679 	we believe this model (a) can be a more principled substrate for data-centric sys., and (b) can be used to study the essentials of such sys.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl1\cf3 \uc0\u9675 	this paper in particular studies the foundations of lineage-based distributed computations\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf0 \uc0\u9679 	(present new prog model)\
\uc0\u9679 	designed to be more principled substrate upon which to build data-centric dist. sys\
\uc0\u9679 	generalization of MR and Spark\
\uc0\u9679 	key ideas:\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl1\cf0 \uc0\u9675 	functional transformations on imm. data\
\uc0\u9675 	unique combination spores and picklers\
\uc0\u9675 	statically-typed, monadic silos\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf0 \uc0\u9679 	contributions\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl1\cf0 \uc0\u9675 	contribution 1: lineage-based distributed computation formalized in typed core language\
\uc0\u9675 	contribution 2: proof of a subject reduction theorem for core language. Besides preservation of types by reduction, our theorem establishes mobility of lineages. Thus, we present the first formal proof of guaranteed serializable lineages, which is at the core of the fault tolerance mechanisms of the most widely-used frameworks.\
\uc0\u9675 	establishing reduction preserved the mobility of lineages.\
\uc0\u9675 	to our knowledge we present 
\i\b the first typed core language with a proof establishing the fact that reduction preserves the mobility of lineages. This property provides a foundation for lineage-based fault tolerance.
\i0\b0 \
\uc0\u9675 	to our knowledge first such formalization of lineage-based dist. comp. including subject reduction\
\uc0\u9675 	contribution 3: 
\i\b This paper extends the theory of serializable closures to serializable lineages. 
\i0\b0 This extension of existing theories~\\cite\{cloudhaskell,spores\} of serializable closures is based on our technical development (proofs; how we formalized) which combines (a) serializable types, (b) safe closures, and (c) lineages in a unique way.\
\pard\tx1800\tx2160\pardeftab720\li2160\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl2\cf0 \uc0\u9632 	people have done serializable closures before;
\i\b  
\i0\b0 lineages are strictly more expressive than closure, since they are able to refer to data residing on different hosts.\
\uc0\u9632 	we believe our theory of serializable lineages is a powerful foundation for the formalization of a range of fault-tolerant, data-centric programming languages and models.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl1\cf0 \uc0\u9675 	contribution 4: programming model generalizing MR/Spark. We show expressiveness using a small case study.\
\uc0\u9675 	contribution 5: implementation in Scala\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf0 \
thus, we believe this paper makes an essential contribution towards establishing a formal foundation of data-centric programming systems with lineage-based fault tolerance.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0

\b\fs36 \cf0 Next Version:\

\b0\fs22 \
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl0\cf0 1.	\strike \strikec0 Part 3\strike0\striked0 \
\ls6\ilvl0\strike \strikec0 2.	Paper \'fcberf\'fchren\
3.	Verbalization of formalization\
4.	Mention theoretical results in intro!!\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl1\cf0 a.	Proof read intro re differentiation of our approach\strike0\striked0  \strike \strikec0 \
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl0\cf0 \strike0\striked0 5.	Check capitalization of headers (what does the guide say?)\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl1
\b \cf0 a.	Fix final title of paper\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl0
\b0 \cf0 6.	Use \\longrightarrow for determ. reduction\
7.	improve desc of well-formed configs\
8.	improve desc of subject reduction theorem?\
9.	Related work\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl0
\b \cf0 10.	Remove all `\\fixme`, `\\color\{gray\}`, and `\\todo`\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl0
\b0 \cf0 11.	Replay\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl1\cf0 a.	We make a couple of strong statements re fault tolerance and a formal model for this to be presented in this paper. We must double check if we really hold this statement. \
\pard\pardeftab720\ri0\sl276\slmult1\sb320\sa80\partightenfactor0
\ls6\ilvl0
\fs28 \cf2 Verbalization of formalization\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls7\ilvl0
\fs22 \cf0 \strike \strikec0 \uc0\u9679 	summarize syntax of terms\
\uc0\u9679 	summarize syntax of types\
\uc0\u9679 	explain sequential reduction\
\uc0\u9679 	explain determ. reduction\
\uc0\u9679 	explain non-determ.\
\uc0\u9679 	type assignment\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls7\ilvl0\cf0 \strike0\striked0 \
http://tex.stackexchange.com/questions/224258/how-to-make-proof-environment-without-amsthm\
\
To add to related work:\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls8\ilvl0\cf0 \uc0\u9679 	ABS-YARN\
\uc0\u9679 	Vats: A Safe, Reactive Storage Abstraction\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls8\ilvl0\cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\sb360\sa120\partightenfactor0
\ls8\ilvl0
\fs32 \cf0 Title\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls9\ilvl0
\fs22 \cf0 \uc0\u9679 	A function-passing model with safe, mobile lineages\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls9\ilvl0\cf3 \uc0\u9679 	foundations of lineage-based distributed computations\
\uc0\u9679 	A Programming Model and Foundations for Lineage-Based Distributed Computation\
\pard\pardeftab720\ri0\sl276\slmult1\sb360\sa120\partightenfactor0
\ls9\ilvl0
\fs32 \cf0 Introduction\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls9\ilvl0
\fs22 \cf0 Story\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl0\cf0 \uc0\u9679 	data-centric growing in importance (para 1)\
\uc0\u9679 	functional principles very good (para 2)\
\uc0\u9679 	new generation of frameworks leverages emerging functional langs (para 3)\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl0\cf0 \strike \strikec0 \uc0\u9679 	pain points: usage, internal untyped, no types -> less optimal\
\uc0\u9679 	All these systems embrace the principle of sending computations to data.\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl0\cf4 \strike0\striked0 \uc0\u9679 	What's the problem?\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl1\cf4 \uc0\u9675 	(a) programming models don't catch certain errors, e.g., .., and 
\i\b thus complexities of distribution trickles to end users who are increasingly non-expert users!
\i0\b0  (us: unique combination of previous techniques, picklers, spores to overcome)\
\uc0\u9675 	(b) foundations unclear. Not only prog. model, but 
\i\b in particular, aspects critical for distributed operation on a large scale
\i0\b0  such as fault tolerance have not been formalized previously (much less proven correct).\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl0\cf3 \uc0\u9679 	(While immensely successful in practice and widely adopted, these programming systems have not been formalized, much less their internal computation models. Thus, their foundations remain largely unclear, in particular, foundations of core aspects such as fault tolerance have been missing so far.)\
\uc0\u9679 	[
\b Related work
\b0 ] for MR, exists Haskell model~\\cite\{L\'e4mmel, 2008, "Google's MapReduce programming model\'97Revisited"\}, but does not discuss fault tolerance.\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl0\cf0 \ul What the paper does:\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf3 \ulnone \uc0\u9679 	(for this, we introduce a new programming model based on..  generalizes MR/Spark..)\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf0 \uc0\u9679 	present new prog model\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf3 \uc0\u9679 	attempts to get to the essence of computation models that keep data stationary and send functions to data\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf0 \uc0\u9679 	(designed to be more principled substrate upon which to build data-centric dist. sys)\
\uc0\u9679 	generalization of MR and Spark\
\uc0\u9679 	
\b lineages describing transformation on imm. is foundation of most widely used systems (MR, Spark, etc.) fault tolerance based on replay of lineages.\
\ls11\ilvl0
\b0 \uc0\u9679 	our programming model adopts exactly this style of providing fault tolerance.\
\uc0\u9679 	key ideas:\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl1\cf0 \uc0\u9675 	functional transformations on imm. data\
\uc0\u9675 	unique combination spores and picklers\
\uc0\u9675 	statically-typed, monadic silos\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf3 \uc0\u9679 	we believe this model (a) can be a more principled substrate for data-centric sys., and (b) can be used to study the essentials of such sys.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl1\cf3 \uc0\u9675 	this paper in particular studies the foundations of lineage-based distributed computations\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf0 \uc0\u9679 	contributions\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl1\cf0 \uc0\u9675 	contribution 1: programming model generalizing MR/Spark. \
\uc0\u9675 	contribution 2 (merge with 3): lineage-based distributed computation formalized in typed core language\
\uc0\u9675 	contribution 3: 
\i\b This paper extends the theory of serializable closures to serializable lineages. 
\i0\b0 This extension of existing theories~\\cite\{cloudhaskell,spores\} of serializable closures is based on our technical development (proofs; how we formalized) which combines (a) serializable types, (b) safe closures, and (c) lineages in a unique way.\
\pard\tx1800\tx2160\pardeftab720\li2160\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl2\cf0 \uc0\u9632 	people have done serializable closures before;
\i\b  
\i0\b0 lineages are strictly more expressive than closure, since they are able to refer to data residing on different hosts.\
\uc0\u9632 	we believe our theory of serializable lineages is a powerful foundation for the formalization of a range of fault-tolerant, data-centric programming languages and models.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl1\cf0 \uc0\u9675 	contribution 4: proof of a subject reduction theorem for core language. Besides preservation of types by reduction, our theorem establishes mobility of lineages. Thus, we present the first formal proof of guaranteed serializable lineages, which is at the core of the fault tolerance mechanisms of the most widely-used frameworks.\
\uc0\u9675 	establishing reduction preserved the mobility of lineages.\
\uc0\u9675 	to our knowledge we present 
\i\b the first typed core language with a proof establishing the fact that reduction preserves the mobility of lineages. This property provides a foundation for lineage-based fault tolerance.
\i0\b0 \
\uc0\u9675 	to our knowledge first such formalization of lineage-based dist. comp. including subject reduction\
\uc0\u9675 	contribution 5: implementation in Scala\
\uc0\u9675 	contribution 6: We show expressiveness using a small case study.\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf0 \
thus, we believe this paper makes an essential contribution towards establishing a formal foundation of data-centric programming systems with lineage-based fault tolerance.\
\
(we believe our theory of serializable lineages is a powerful foundation for the formalization of a range of fault-tolerant, data-centric programming languages and models.)\
\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf0 \ul What the paper does:\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls12\ilvl0\cf4 \ulnone \uc0\u9679 	This paper introduces a new programming model which embraces the principle of stationary data and (safe) mobile functions (\'93compute to data\'94).\
\uc0\u9679 	It can be viewed as a generalization of the programming models classified by Google\'92s MapReduce/Apache Spark.\
\uc0\u9679 	Our programming model adopts the concept of 
\i\b lineage
\i0\b0  which is used by the aforementioned systems to provide fault tolerance, which is critical for distributed operation on a large scale.\
\uc0\u9679 	This lineage-based fault tolerance is facilitated by the core computation principle of transformations on immutable, stationary data.\
\pard\tx1800\tx2160\pardeftab720\li2160\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls12\ilvl1\cf4 \uc0\u9675 	[formulate] Unique combination of previous features and techniques (spores, pickling) enables (a) ruling out certain classes of errors such as unsafe closure serialization, and (b) optimizing serialization through type-based pickler generation.\
\uc0\u9675 	[sketch] core components of the model are combined in a unique way also to offer benefits to end users, such as safe, efficient closure serialization.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls12\ilvl0\cf4 \uc0\u9679 	Moreover, we provide a complete formalization of the programming model.\
\uc0\u9679 	This paper studies the foundations of lineage-based distributed computations. In particular, we develop a theory of safe, mobile lineages based on a subject reduction theorem for a typed core language.\
\uc0\u9679 	Thus, we believe the formal model can serve as a foundation for further developing the theory of data-centric distributed programming, including aspects such as fault tolerance.\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\ls12\ilvl0\cf3 \
Contributions:\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls13\ilvl0\cf0 \uc0\u9679 	\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\ls13\ilvl0\cf0 \
}